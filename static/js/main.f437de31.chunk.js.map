{"version":3,"sources":["bada.config.js","components/PoolStatus.js","components/PoolReport.js","index.js"],"names":["bada_config","cache","server","PoolStatus","react_default","a","createElement","Config","date","Date","day","getDate","month","getMonth","year","getFullYear","concat","today","PoolStatus_Content","Content","_useState","useState","PoolStatus_Loading","_useState2","Object","slicedToArray","content","setContent","useEffect","fetch","then","res","json","data","PoolStatus_Summary","catch","err","PoolStatus_Error","message","Loading","Summary","props","contact","name","address","timestamp","open","chlorine","ph","watertemp","airtemp","Error","App","ReactDOM","render","react_router_dom","react_router","exact","path","component","PoolReport","to","document","getElementById"],"mappings":"4NAAeA,EACP,aADOA,EAER,CACHC,MAAS,oDACTC,OAAU,sCCqBCC,EAnBI,WASjB,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAKC,GACLH,EAAAC,EAAAC,cAAA,oCAVU,WACZ,IAAME,EAAO,IAAIC,KACXC,EAAMF,EAAKG,UACXC,EAAQJ,EAAKK,WACbC,EAAON,EAAKO,cAClB,SAAAC,OAAUF,EAAV,KAAAE,OAAkBJ,EAAM,GAAG,IAAKA,EAAMA,EAAtC,KAAAI,OAA+CN,GAKpBO,IACzBb,EAAAC,EAAAC,cAACY,EAAD,QAiBAC,EAAU,WAAM,IAAAC,EACUC,mBAASjB,EAAAC,EAAAC,cAACgB,EAAD,OADnBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GACbM,EADaH,EAAA,GACJI,EADIJ,EAAA,GAQpB,OANAK,oBAAU,WACRC,MAAMtB,EAAWN,OACd6B,KAAK,SAACC,GAAD,OAASA,EAAIC,SAClBF,KAAK,SAACG,GAAD,OAAUN,EAAWvB,EAAAC,EAAAC,cAAC4B,EAAD,CAASjC,MAAOgC,OAC1CE,MAAM,SAACC,GAAD,OAAST,EAAWvB,EAAAC,EAAAC,cAAC+B,EAAD,CAAOC,QAASF,EAAIE,cAChD,IACKlC,EAAAC,EAAAC,cAAA,WAAMoB,IAMVa,EAAU,WACd,OAAQnC,EAAAC,EAAAC,cAAA,yBAgBJkC,EAAU,SAACC,GAGf,OACErC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,sCACAF,EAAAC,EAAAC,cAAA,SAAImC,EAAMxC,MAAMyC,QAAQC,KAAxB,KAAgCF,EAAMxC,MAAMyC,QAAQE,UAEtDxC,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,mCACAF,EAAAC,EAAAC,cAAA,SAAImC,EAAMxC,MAAM4C,YAElBzC,EAAAC,EAAAC,cAAA,UACGmC,EAAMxC,MAAM6C,KACT1C,EAAAC,EAAAC,cAAA,qCACAF,EAAAC,EAAAC,cAAA,6BAENF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,oCAAyBmC,EAAMxC,MAAMgC,KAAKc,SAA1C,QACA3C,EAAAC,EAAAC,cAAA,oCAAyBmC,EAAMxC,MAAMgC,KAAKe,IAC1C5C,EAAAC,EAAAC,cAAA,iCAAyBmC,EAAMxC,MAAMgC,KAAKgB,UAA1C,SACA7C,EAAAC,EAAAC,cAAA,iCAAyBmC,EAAMxC,MAAMgC,KAAKiB,QAA1C,YAYFC,EAAQ,SAACV,GACb,OACErC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,SAAImC,EAAMH,WC7FDc,EAVH,WACV,OACEhD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,sBCgBN+C,IAASC,OAAOlD,EAAAC,EAAAC,cAACiD,EAAA,EAAD,KAAYnD,EAAAC,EAAAC,cAVb,WACb,OACEF,EAAAC,EAAAC,cAACkD,EAAA,EAAD,KACEpD,EAAAC,EAAAC,cAACkD,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWxD,IACjCC,EAAAC,EAAAC,cAACkD,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,UAAUC,UAAWC,IACvCxD,EAAAC,EAAAC,cAACkD,EAAA,EAAD,CAAOG,WAPUE,EAOgB,IAPV,kBAAMzD,EAAAC,EAAAC,cAACkD,EAAA,EAAD,CAAUK,GAAIA,SAA1B,IAAAA,GAYK,OAAwBC,SAASC,eAAe","file":"static/js/main.f437de31.chunk.js","sourcesContent":["export default {\r\n  name: \"Poolsystem\",\r\n  url: {\r\n    \"cache\": \"https://pool-erikslund5.firebaseio.com/cache.json\",\r\n    \"server\": \"http://<project-id>.herokuapp.com/\"\r\n  }\r\n}\r\n","import React, { useState, useEffect } from 'react';\nimport Config from '../bada.config'\n\n// # PoolStatus\n// Root component for the pool status view.\n//\nconst PoolStatus = () => {\n  // Get a yyyy-mm-dd string representation of today's date\n  const today = () => {\n    const date = new Date()\n    const day = date.getDate()\n    const month = date.getMonth()\n    const year = date.getFullYear()\n    return `${year}-${month<10?\"\"+0+month:month}-${day}`\n  }\n  return (\n    <div>\n      <h1>{Config.name}</h1>\n      <h2>Poolinformation för {today()}</h2>\n      <Content/>\n    </div>\n  )\n}\n\n// The PoolStatus-component is the single external endpoint\nexport default PoolStatus\n\n// # Content\n// Component for conditional presentation of pool information\n//\n// ## States\n// There are three `states` in the view:\n//  * Loading:  for when data is being fetched and there's nothing to display\n//  * Summary:  when data is successfully fetched and ready to be displayed\n//  * Error:    when an error occured during fetch or processing of data\n//\nconst Content = () => {\n  const [content, setContent] = useState(<Loading/>);\n  useEffect(() => {\n    fetch(Config.url.cache)\n      .then((res) => res.json())\n      .then((data) => setContent(<Summary cache={data}/>))\n      .catch((err) => setContent(<Error message={err.message}/>))\n  }, [])\n  return (<div>{content}</div>)\n}\n\n// # Loading\n// Component for indicating that data is being processed\n//\nconst Loading = () => {\n  return (<h1>Loading...</h1>)\n}\n\n// # Summary\n// Component for displaying pool information\n//\n// ## Props:\n//    * cache.timestamp:        the time and date of last cache update\n//    * cache.open:             boolean value representing pool accessability\n//    * cache.contact.address:  address of contact person\n//    * cache.contact.name:     name of contact person\n//    * cache.data.airtemp:     air temperature metrics\n//    * cache.data.chlorine:    chlorine metrics\n//    * cache.data.ph:          pH metrics\n//    * cache.data.watertemp:   water temperature metrics\n//\nconst Summary = (props) => {\n  // TODO:  return <Error/> if some expected field is missing from props.cache,\n  //        or resort to default values.\n  return (\n    <div>\n      <h3>\n        <span>Ansvarig denna vecka: </span>\n        <u>{props.cache.contact.name}, {props.cache.contact.address}</u>\n      </h3>\n      <h4>\n        <span>Senast uppdaterad: </span>\n        <u>{props.cache.timestamp}</u>\n      </h4>\n      <h1>\n        {props.cache.open\n          ? <span>Tillåtet att bada!</span>\n          : <span>Badförbud</span>}\n      </h1>\n      <div>\n        <div>Klorvärde:         {props.cache.data.chlorine} ppm</div>\n        <div>pH-värde:          {props.cache.data.ph}</div>\n        <div>Vattentemperatur:  {props.cache.data.watertemp}°C</div>\n        <div>Lufttemperatur:    {props.cache.data.airtemp}°C</div>\n      </div>\n    </div>\n  )\n}\n\n// # Error\n// Component for reporting errors to the user\n//\n// ## Props\n//    * message:  string representation of the error that has occured\n//\nconst Error = (props) => {\n  return (\n    <div>\n      <h1>Error!</h1>\n      <p>{props.message}</p>\n    </div>\n  )\n}\n","import React from 'react';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n      <h1>\r\n        Report\r\n      </h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport './index.css';\n\nimport PoolStatus from './components/PoolStatus'\nimport PoolReport from './components/PoolReport'\n\nconst createRedirect = to => () => <Redirect to={to} />\n\nconst Routes = () => {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={PoolStatus}/>\n      <Route exact path=\"/report\" component={PoolReport}/>\n      <Route component={createRedirect('/')}/>\n    </Switch>\n  );\n}\n\nReactDOM.render(<HashRouter><Routes/></HashRouter>, document.getElementById('root'));\n"],"sourceRoot":""}